# Database
# For local development (using Docker Compose postgres service):
DATABASE_URL="postgresql://ocruser:ocrpassword@localhost:5433/ocrdb"

# For external PostgreSQL server (production):
# DATABASE_URL="postgresql://username:password@your-postgres-host:5432/dbname"
# DATABASE_URL="postgresql://user:pass@postgres.example.com:5432/ocr_production"

# Environment
NODE_ENV="development"

# ============================================================================
# URL CONFIGURATION
# ============================================================================

# APP_DOMAIN: Main application domain (frontend)
# - Used for status page URLs in webhook payloads
# - This is where users access the web interface
# Examples:
#   Development: http://localhost:3040
#   Production: https://ocrtools.com
APP_DOMAIN="http://localhost:3040"

# NEXT_PUBLIC_API_BASE_URL: API server domain (backend)
# - Use this if your API runs on a different domain/port
# - Leave empty/commented to use same domain as frontend
# Examples:
#   Development (same domain): (leave empty)
#   Development (separate): http://localhost:4040
#   Production (separate): https://api.ocrtools.com
# NEXT_PUBLIC_API_BASE_URL=""

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================
# Adjust these values based on your server's CPU cores and RAM

# MAX_CONCURRENT_JOBS: How many OCR jobs each worker processes simultaneously
# - Each job can use significant RAM (especially for large PDFs)
# - Recommended values:
#   * 2-4 for 4-core CPU with 8GB RAM
#   * 4-8 for 8-core CPU with 16GB+ RAM
#   * 1-2 for limited memory systems
# Default: 3
MAX_CONCURRENT_JOBS=3

# PDF_PAGE_CONCURRENCY: How many PDF pages to process in parallel
# - Higher values = faster PDF processing but more RAM usage
# - Each page processes through PaddleOCR independently
# - Recommended values:
#   * 2-4 for smaller PDFs (<10 pages)
#   * 4-6 for larger PDFs (10+ pages) on multi-core systems
#   * 2 for memory-constrained systems
# Default: 4
PDF_PAGE_CONCURRENCY=4

# HORIZONTAL SCALING:
# To process more jobs simultaneously, scale worker instances:
# docker compose up -d --scale worker=3
# This runs 3 worker containers, each processing MAX_CONCURRENT_JOBS
